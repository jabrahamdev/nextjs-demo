{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jabrahamdev/Documents/Cursos/React/Academind/Projects/sec23_nextJsMeetups/pages/index.js\";\nimport { useEffect, useState } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\"; // Import MongoClient to get the data there as static props\n\nimport { MongoClient } from \"mongodb\"; // const DUMMY_MEETUPS = [\n//   {\n//     id: \"m1\",\n//     title: \"A First Meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n//     address: \"Some address 5, 12345 Some City\",\n//     description: \"This is a first meetup!\",\n//   },\n//   {\n//     id: \"m2\",\n//     title: \"A Second Meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n//     address: \"Some address 10, 12345 Some City\",\n//     description: \"This is a second meetup!\",\n//   },\n// ];\n\nconst HomePage = props => {\n  // const [loadedMeetups, setLoadedMeetups] = useState([]);\n  // useEffect(() => {\n  //   setLoadedMeetups(DUMMY_MEETUPS)\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n}; // Instead of useState and useEffect, nextjs enables a function that gets\n// called in build time and can be used for pre-rendering fetched data into\n// the site. Function must return an object with at least a props property\n// that will be passed to the page component.\n// NEXTJS asks to export this function, it works ONLY ON PAGES components.\n\n\nexport const getStaticProps = async () => {\n  // fetch data\n  const client = await MongoClient.connect(`mongodb+srv://admin-jabraham:dunkel1mongo@cluster0.e4adw.mongodb.net/meetups?retryWrites=true&w=majority`);\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\"); // Call .find().toArray() on meetupsCollection to get all meetups\n  // within an array\n\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    // The revalidate property sets how often the page must be re-generated\n    // in seconds.\n    revalidate: 300\n  };\n}; // Next.js will pre-render this page on each request using the data returned\n// by getServerSideProps (ON THE SERVER AFTER DEPLOYMENT)\n// export const getServerSideProps = async () => {\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// };\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/jabrahamdev/Documents/Cursos/React/Academind/Projects/sec23_nextJsMeetups/pages/index.js"],"names":["useEffect","useState","MeetupList","MongoClient","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,kCAAvB,C,CAEA;;AACA,SAASC,WAAT,QAA4B,SAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B;AACA;AACA;AACA;AAEA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAPD,C,CASA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC;AACA,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CAClB,0GADkB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CARwC,CAUxC;AACA;;AACA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AACvCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADyB;AAEvCC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFuB;AAGvCC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHyB;AAIvCC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJmC,OAAL,CAAlB;AAAX,KADF;AAOL;AACA;AACAC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD,CA3BM,C,CA6BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAepB,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\n// Import MongoClient to get the data there as static props\nimport { MongoClient } from \"mongodb\";\n\n// const DUMMY_MEETUPS = [\n//   {\n//     id: \"m1\",\n//     title: \"A First Meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n//     address: \"Some address 5, 12345 Some City\",\n//     description: \"This is a first meetup!\",\n//   },\n//   {\n//     id: \"m2\",\n//     title: \"A Second Meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n//     address: \"Some address 10, 12345 Some City\",\n//     description: \"This is a second meetup!\",\n//   },\n// ];\n\nconst HomePage = (props) => {\n  // const [loadedMeetups, setLoadedMeetups] = useState([]);\n  // useEffect(() => {\n  //   setLoadedMeetups(DUMMY_MEETUPS)\n  // }, []);\n\n  return <MeetupList meetups={props.meetups} />;\n};\n\n// Instead of useState and useEffect, nextjs enables a function that gets\n// called in build time and can be used for pre-rendering fetched data into\n// the site. Function must return an object with at least a props property\n// that will be passed to the page component.\n// NEXTJS asks to export this function, it works ONLY ON PAGES components.\nexport const getStaticProps = async () => {\n  // fetch data\n  const client = await MongoClient.connect(\n    `mongodb+srv://admin-jabraham:dunkel1mongo@cluster0.e4adw.mongodb.net/meetups?retryWrites=true&w=majority`\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  // Call .find().toArray() on meetupsCollection to get all meetups\n  // within an array\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n\n  return {\n    props: { meetups: meetups.map(meetup => ({\n      title: meetup.title,\n      address: meetup.address,\n      image: meetup.image,\n      id: meetup._id.toString()\n    })) },\n    // The revalidate property sets how often the page must be re-generated\n    // in seconds.\n    revalidate: 300,\n  };\n};\n\n// Next.js will pre-render this page on each request using the data returned\n// by getServerSideProps (ON THE SERVER AFTER DEPLOYMENT)\n// export const getServerSideProps = async () => {\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// };\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}